@model ImageCompare.Models.Question

@{
    ViewData["Title"] = "学習用画像のアップロード";
}

<div class="container mt-4">
    <div class="row justify-content-center">
        <div class="col-md-10">
            <div class="card shadow">
                <div class="card-header bg-info text-white">
                    <h3 class="card-title mb-0">
                        <i class="fas fa-upload"></i> 学習用画像のアップロード
                    </h3>
                    <p class="mb-0 mt-2">問題：<strong>@Model.Name</strong></p>
                </div>
                <div class="card-body">
                    @if (TempData["Success"] != null)
                    {
                        <div class="alert alert-success alert-dismissible fade show" role="alert">
                            @TempData["Success"]
                            <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
                        </div>
                    }

                    @if (TempData["Error"] != null)
                    {
                        <div class="alert alert-danger alert-dismissible fade show" role="alert">
                            @TempData["Error"]
                            <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
                        </div>
                    }

                    <div class="alert alert-warning">
                        <h5><i class="fas fa-exclamation-triangle"></i> 重要な注意事項</h5>
                        <ul class="mb-0">
                            <li>学習に使用する画像を複数枚（推奨：5枚以上）アップロードしてください</li>
                            <li>画像はJPEG、PNG形式に対応しています</li>
                            <li>高品質で多様な角度の画像を使用すると、より正確な照合が可能になります</li>
                            <li>アップロード後、モデルの学習を行う必要があります</li>
                        </ul>
                    </div>

                    <form asp-action="UploadTrainingImages" method="post" enctype="multipart/form-data" id="uploadForm">
                        <div asp-validation-summary="ModelOnly" class="alert alert-danger"></div>

                        <div class="mb-4">
                            <label class="form-label">学習用画像を選択 <span class="text-danger">*</span></label>
                            <div class="drop-zone" id="dropZone">
                                <div class="drop-zone-content">
                                    <i class="fas fa-cloud-upload-alt fa-3x text-muted mb-3"></i>
                                    <p class="text-muted">ここに画像をドラッグ＆ドロップするか、クリックして選択</p>
                                    <input type="file" name="images" id="imageInput" multiple accept="image/*" class="d-none">
                                    <button type="button" class="btn btn-outline-primary" onclick="document.getElementById('imageInput').click()">
                                        <i class="fas fa-folder-open"></i> ファイルを選択
                                    </button>
                                </div>
                            </div>
                        </div>

                        <div id="imagePreview" class="mb-4" style="display: none;">
                            <h5>選択された画像:</h5>
                            <div class="row" id="previewContainer">
                                <!-- プレビュー画像がここに追加されます -->
                            </div>
                        </div>

                        <div class="d-flex justify-content-between">
                            <a asp-action="Index" class="btn btn-secondary">
                                <i class="fas fa-arrow-left"></i> 問題一覧に戻る
                            </a>
                            <button type="submit" class="btn btn-success btn-lg" id="submitBtn" disabled>
                                <i class="fas fa-upload"></i> 画像をアップロード
                            </button>
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>
</div>

<style>
    .drop-zone {
        border: 2px dashed #ccc;
        border-radius: 10px;
        padding: 40px;
        text-align: center;
        cursor: pointer;
        transition: all 0.3s ease;
    }

    .drop-zone:hover,
    .drop-zone.dragover {
        border-color: #007bff;
        background-color: #f8f9fa;
    }

    .image-preview {
        position: relative;
        margin-bottom: 10px;
    }

    .image-preview img {
        width: 100%;
        height: 150px;
        object-fit: cover;
        border-radius: 5px;
        border: 1px solid #ddd;
    }

    .image-preview .remove-btn {
        position: absolute;
        top: 5px;
        right: 5px;
        background: rgba(220, 53, 69, 0.8);
        color: white;
        border: none;
        border-radius: 50%;
        width: 30px;
        height: 30px;
        cursor: pointer;
        display: flex;
        align-items: center;
        justify-content: center;
    }

    .image-preview .remove-btn:hover {
        background: rgba(220, 53, 69, 1);
    }
</style>

@section Scripts {
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            const dropZone = document.getElementById('dropZone');
            const imageInput = document.getElementById('imageInput');
            const imagePreview = document.getElementById('imagePreview');
            const previewContainer = document.getElementById('previewContainer');
            const submitBtn = document.getElementById('submitBtn');
            
            let selectedFiles = [];

            // ドラッグ＆ドロップ機能
            dropZone.addEventListener('click', () => imageInput.click());
            
            dropZone.addEventListener('dragover', (e) => {
                e.preventDefault();
                dropZone.classList.add('dragover');
            });

            dropZone.addEventListener('dragleave', () => {
                dropZone.classList.remove('dragover');
            });

            dropZone.addEventListener('drop', (e) => {
                e.preventDefault();
                dropZone.classList.remove('dragover');
                const files = Array.from(e.dataTransfer.files);
                handleFiles(files);
            });

            imageInput.addEventListener('change', (e) => {
                const files = Array.from(e.target.files);
                handleFiles(files);
            });

            function handleFiles(files) {
                // 画像ファイルのみをフィルタ
                const imageFiles = files.filter(file => file.type.startsWith('image/'));
                
                if (imageFiles.length === 0) {
                    alert('画像ファイルを選択してください。');
                    return;
                }

                selectedFiles = [...selectedFiles, ...imageFiles];
                updateImageInput();
                updatePreview();
                updateSubmitButton();
            }

            function updateImageInput() {
                // FileListを作成してinputに設定
                const dt = new DataTransfer();
                selectedFiles.forEach(file => dt.items.add(file));
                imageInput.files = dt.files;
            }

            function updatePreview() {
                previewContainer.innerHTML = '';
                
                selectedFiles.forEach((file, index) => {
                    const col = document.createElement('div');
                    col.className = 'col-md-3 col-sm-4 col-6';
                    
                    const preview = document.createElement('div');
                    preview.className = 'image-preview';
                    
                    const img = document.createElement('img');
                    img.src = URL.createObjectURL(file);
                    img.alt = file.name;
                    
                    const removeBtn = document.createElement('button');
                    removeBtn.className = 'remove-btn';
                    removeBtn.innerHTML = '×';
                    removeBtn.type = 'button';
                    removeBtn.onclick = () => removeFile(index);
                    
                    const fileName = document.createElement('small');
                    fileName.className = 'text-muted d-block mt-1';
                    fileName.textContent = file.name;
                    
                    preview.appendChild(img);
                    preview.appendChild(removeBtn);
                    col.appendChild(preview);
                    col.appendChild(fileName);
                    previewContainer.appendChild(col);
                });

                imagePreview.style.display = selectedFiles.length > 0 ? 'block' : 'none';
            }

            function removeFile(index) {
                selectedFiles.splice(index, 1);
                updateImageInput();
                updatePreview();
                updateSubmitButton();
            }

            function updateSubmitButton() {
                submitBtn.disabled = selectedFiles.length === 0;
            }
        });
    </script>
} 